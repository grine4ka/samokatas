package ru.bykov.codeforces.tinkoffcup1

import java.io.PrintWriter

/**
 * 4 игрока играют в карточную игру. Играют в игру они, конечно, игриво!
 * В игральной колоде для данной игристой игры есть 4 игральные карты каждого игрового номинала, а также два джокера.
 * В частности, есть четыре королевы.
 * Игрокам по очереди раздают карты. Так как всего карт 54, то в конце у всех игроков будет по 13 карт, а также две какие-то карты уйдут в сброс.
 * Все игроки по очереди сказали, сколько у них королев, однако, возможно, кто-то из них соврал.
 * Вам необходимо узнать минимальное число игроков, которые могли соврать.
 *
 * Входные данные
 * В единственной строке входного файла даны 4 целых числа a, b, c, d (0≤a,b,c,d≤9) — количества королев у каждого игрока по их словам.
 *
 * Выходные данные
 * Выведите одно число — минимальное количество игроков, которые могли соврать.
 *
 * Пример
 * входные данные
 * 3 2 4 1
 *
 * выходные данные
 * 2
 * Примечание
 * Пояснение к примеру:
 * королев всего 4 штуки, а по словам игроков у них суммарно их 10. Точно кто-то соврал!
 * Заметим, что соврало как миниум двое.
 * Легко можно убидиться, что не существует такого распределения карт по игрокам и сбросу, чтобы соврал всего один игрок.
 * А соврать двое вполне могли. Если, к примеру, распределение королев следующее: 0 2 0 1 (и еще одна королева в сбросе).
 */
fun main() {
    bufferOut {
        solveProblem()
    }
}

private fun PrintWriter.solveProblem() {
    val (a, b, c, d) = readInts()
    val list = listOf(a, b, c, d).sorted()
    var sum = list.sum()
    when {
        sum == 0 || sum == 1 -> println(1)
        sum <= 4 -> println(0)
        else -> {
            val iter = list.reversed().iterator()
            var count = 0
            while (iter.hasNext() && sum > 4) {
                count++
                sum -= iter.next()
            }
            println(count)
        }
    }
}

private fun readInts() = readLine()!!.split(" ").map(String::toInt)

private fun bufferOut(block: PrintWriter.() -> Unit) = PrintWriter(System.out).use { block(it) }